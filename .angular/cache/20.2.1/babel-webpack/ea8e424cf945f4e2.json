{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./theme.service\";\nexport let ThemeToggleComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class ThemeToggleComponent {\n    constructor(ts) {\n      this.ts = ts;\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function ThemeToggleComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeToggleComponent)(i0.ɵɵdirectiveInject(i1.ThemeService));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ThemeToggleComponent,\n      selectors: [[\"app-theme-toggle\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[2, \"display\", \"flex\", \"align-items\", \"center\", \"gap\", \"8px\"], [\"role\", \"switch\", \"title\", \"Toggle between dark (black) and light (white) mode\", 1, \"theme-toggle\", 3, \"click\"], [1, \"knob\"], [1, \"lead\"]],\n      template: function ThemeToggleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵdomElementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵdomListener(\"click\", function ThemeToggleComponent_Template_div_click_1_listener() {\n            return ctx.ts.toggle();\n          });\n          i0.ɵɵdomElement(2, \"div\", 2);\n          i0.ɵɵdomElementEnd();\n          i0.ɵɵdomElementStart(3, \"span\", 3);\n          i0.ɵɵtext(4);\n          i0.ɵɵdomElementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"aria-checked\", ctx.ts.mode === \"dark\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.ts.mode === \"dark\" ? \"Dark\" : \"Light\", \" mode\");\n        }\n      },\n      dependencies: [CommonModule],\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return ThemeToggleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}