{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ChatWidgetComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggle());\n    });\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵtext(3, \"\\uD83C\\uDF89 \");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"Welcome back!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 4);\n    i0.ɵɵtext(7, \"How may I help you today?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_0_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggle());\n    });\n    i0.ɵɵelement(9, \"img\", 6);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatWidgetComponent_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const m_r4 = ctx.$implicit;\n    i0.ɵɵclassProp(\"bot\", m_r4.from === \"bot\")(\"user\", m_r4.from === \"user\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"bubble-alt\", m_r4.alt);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(m_r4.text);\n  }\n}\nfunction ChatWidgetComponent_div_1_div_10_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_1_div_10_button_1_Template_button_click_0_listener() {\n      const q_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onQuick(q_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const q_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(q_r6);\n  }\n}\nfunction ChatWidgetComponent_div_1_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, ChatWidgetComponent_div_1_div_10_button_1_Template, 2, 1, \"button\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.quick);\n  }\n}\nfunction ChatWidgetComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_1_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggle());\n    });\n    i0.ɵɵtext(3, \"\\u2715\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"span\", 12);\n    i0.ɵɵtext(7, \"Novatalk\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 13);\n    i0.ɵɵtemplate(9, ChatWidgetComponent_div_1_div_9_Template, 3, 7, \"div\", 14)(10, ChatWidgetComponent_div_1_div_10_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 16)(12, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatWidgetComponent_div_1_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.input, $event) || (ctx_r1.input = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"keydown.enter\", function ChatWidgetComponent_div_1_Template_input_keydown_enter_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.send());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_1_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.send());\n    });\n    i0.ɵɵtext(14, \"Send\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quick.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.input);\n  }\n}\nexport let ChatWidgetComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class ChatWidgetComponent {\n    constructor() {\n      this.open = false;\n      this.input = '';\n      this.messages = [];\n      this.quick = [];\n    }\n    ngOnInit() {\n      // Seed messages to mirror the “how msgs work” screen\n      this.messages = [{\n        from: 'bot',\n        text: 'Hello there! It is nice to meet you!',\n        alt: true\n      }, {\n        from: 'bot',\n        text: 'What are you up to today? Please use the chatbot to ask me anything. I am ready to listen.',\n        alt: true\n      }];\n      this.quick = ['What is Novatalk?', 'I have a question', 'I want to talk to customer service'];\n    }\n    toggle() {\n      this.open = !this.open;\n    }\n    onQuick(choice) {\n      // Show user chip\n      this.messages.push({\n        from: 'user',\n        text: choice,\n        alt: true\n      });\n      // Simple scripted replies for demo parity\n      if (choice === 'What is Novatalk?') {\n        this.bot('Novatalk is an agentic AI that helps customers and teams by answering questions, triggering workflows, and integrating with your systems.');\n      } else if (choice === 'I have a question') {\n        this.bot('Please enter your email –');\n      } else if (choice === 'I want to talk to customer service') {\n        this.bot('Sure — connecting you to customer service. Meanwhile, share a brief summary of your issue.');\n      }\n    }\n    send() {\n      const t = this.input.trim();\n      if (!t) return;\n      // User message bubble\n      this.messages.push({\n        from: 'user',\n        text: t\n      });\n      // If last bot asked for email, simulate email chip + confirmation\n      if (/please enter your email/i.test(this.lastBotText())) {\n        this.messages.push({\n          from: 'user',\n          text: t,\n          alt: true\n        }); // email chip\n        this.bot(\"We've sent a link to your email. Please use that link to login.\");\n        this.quick = []; // hide chips afterward\n      } else {\n        // Generic acknowledgment\n        this.bot('Thanks — got it!');\n      }\n      this.input = '';\n    }\n    bot(text) {\n      setTimeout(() => this.messages.push({\n        from: 'bot',\n        text,\n        alt: /email|hello there|what are you up to/i.test(text)\n      }), 250);\n    }\n    lastBotText() {\n      for (let i = this.messages.length - 1; i >= 0; i--) {\n        if (this.messages[i].from === 'bot') return this.messages[i].text;\n      }\n      return '';\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function ChatWidgetComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChatWidgetComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatWidgetComponent,\n      selectors: [[\"app-chat-widget\"]],\n      decls: 2,\n      vars: 2,\n      consts: [[\"class\", \"chat-launcher\", 4, \"ngIf\"], [\"class\", \"chat-panel\", 4, \"ngIf\"], [1, \"chat-launcher\"], [\"aria-label\", \"Open chat with Novatalk\", 1, \"suggestion\", 3, \"click\"], [1, \"line\"], [\"aria-label\", \"Open chat\", 1, \"fab\", 3, \"click\"], [\"src\", \"/assets/Novatalk.png\", \"alt\", \"Novatalk\", 1, \"fab-logo\"], [1, \"chat-panel\"], [1, \"panel-chrome\"], [\"aria-label\", \"Close chat\", 1, \"icon-btn\", 3, \"click\"], [1, \"bot-pill\"], [\"src\", \"/assets/Novatalk.png\", \"alt\", \"Novatalk\", 1, \"pill-avatar-img\"], [1, \"pill-name\"], [1, \"panel-body\"], [\"class\", \"msg\", 3, \"bot\", \"user\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"quick-row\", 4, \"ngIf\"], [1, \"panel-input\"], [\"placeholder\", \"Type\", 3, \"ngModelChange\", \"keydown.enter\", \"ngModel\"], [\"type\", \"button\", 1, \"btn\", \"primary\", 3, \"click\"], [1, \"msg\"], [1, \"bubble\"], [1, \"quick-row\"], [\"class\", \"quick\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"quick\", 3, \"click\"]],\n      template: function ChatWidgetComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ChatWidgetComponent_div_0_Template, 10, 0, \"div\", 0)(1, ChatWidgetComponent_div_1_Template, 15, 3, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.open);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.open);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\".chat-launcher[_ngcontent-%COMP%]{position:fixed;right:20px;bottom:20px;z-index:1000;width:180px;display:flex;flex-direction:column;align-items:flex-end;gap:10px}.suggestion[_ngcontent-%COMP%]{width:100%;padding:12px 14px;border-radius:16px;border:1px solid rgba(156,199,255,.28);background:linear-gradient(180deg,#0f2238,#0b1a2d);color:#eaf3ff;box-shadow:0 10px 24px #00000059,inset 0 -8px 18px #0003;text-align:left;cursor:pointer}.suggestion[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]{white-space:nowrap;font-size:16px;line-height:1.35}.suggestion[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]:first-child{margin-bottom:6px}.fab[_ngcontent-%COMP%]{width:56px;height:56px;border-radius:999px;display:grid;place-items:center;border:2px solid rgba(255,255,255,.9);background:#0b1a2d;box-shadow:0 8px 18px #00000073;padding:0;cursor:pointer}.fab-logo[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;border-radius:50%}.chat-panel[_ngcontent-%COMP%]{position:fixed;right:20px;bottom:20px;z-index:1000;width:334px;height:514px;border-radius:14px;overflow:hidden;background:linear-gradient(180deg,#cfe4ff,#153557 8%,#0d253f);box-shadow:0 18px 40px #00000073;display:flex;flex-direction:column}.panel-chrome[_ngcontent-%COMP%]{height:28px;display:flex;align-items:center;justify-content:flex-end;padding:0 8px}.icon-btn[_ngcontent-%COMP%]{background:transparent;border:0;color:#e8f2ff;font-size:16px;cursor:pointer;padding:4px 6px;border-radius:6px}.icon-btn[_ngcontent-%COMP%]:hover{background:#ffffff14}.bot-pill[_ngcontent-%COMP%]{align-self:center;display:inline-flex;align-items:center;gap:8px;padding:6px 10px;margin-bottom:8px;border-radius:999px;background:linear-gradient(180deg,#ffffffe6,#ffffffb3);color:#0b1a2d;font-weight:700;box-shadow:0 2px 6px #00000040,inset 0 0 0 1px #fff9}.pill-avatar-img[_ngcontent-%COMP%]{width:18px;height:18px;border-radius:999px;box-shadow:0 0 0 2px #ffffffd9;object-fit:cover}.pill-name[_ngcontent-%COMP%]{font-weight:700}.panel-body[_ngcontent-%COMP%]{flex:1;overflow:auto;padding:10px 12px 12px;display:flex;flex-direction:column;gap:8px}.msg[_ngcontent-%COMP%]{display:flex}.msg.bot[_ngcontent-%COMP%]{justify-content:flex-start}.msg.user[_ngcontent-%COMP%]{justify-content:flex-end}.bubble[_ngcontent-%COMP%]{max-width:78%;padding:8px 12px;border-radius:12px;font-size:14px;line-height:1.35;border:1px solid rgba(255,255,255,.16);background:linear-gradient(180deg,#eef4ff,#b7c8e6);color:#0b1a2d;box-shadow:inset 0 -8px 16px #0000001f,0 2px 8px #00000040}.bubble-alt[_ngcontent-%COMP%]{padding:6px 10px;border-radius:10px}.msg.user[_ngcontent-%COMP%]   .bubble[_ngcontent-%COMP%]{background:linear-gradient(180deg,#1a4f86,#0e3a69);color:#eaf3ff;border-color:#ffffff1f}.quick-row[_ngcontent-%COMP%]{display:flex;gap:8px;flex-wrap:wrap;margin-top:4px}.quick[_ngcontent-%COMP%]{padding:6px 10px;border-radius:10px;border:1px solid rgba(255,255,255,.18);background:linear-gradient(180deg,#dfe9ff,#b6c7e7);color:#0b1a2d;font-weight:600;font-size:13px;box-shadow:inset 0 -6px 12px #00000014;cursor:pointer}.panel-input[_ngcontent-%COMP%]{display:flex;gap:10px;align-items:center;padding:10px 12px 12px}.panel-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex:1;height:38px;border-radius:10px;border:1px solid rgba(255,255,255,.25);background:#fffffff2;color:#0b1a2d;padding:0 12px;outline:none}.btn.primary[_ngcontent-%COMP%]{display:inline-flex;align-items:center;justify-content:center;min-width:84px;height:38px;padding:0 14px;border-radius:10px;border:none;cursor:pointer;background:#0e7cf2;color:#fff;font-weight:600;font-size:14px}.btn.primary[_ngcontent-%COMP%]:hover{background:#0b65c6}@media (max-width: 400px){.chat-panel[_ngcontent-%COMP%]{right:10px;bottom:10px;width:calc(100vw - 20px);height:520px}.chat-launcher[_ngcontent-%COMP%]{right:10px;bottom:10px}}.suggestion[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]{white-space:normal;word-break:break-word;overflow-wrap:anywhere}.chat-launcher[_ngcontent-%COMP%]{width:190px}.suggestion[_ngcontent-%COMP%]{max-width:100%}\"]\n    }));\n  }\n  _staticBlock();\n  return ChatWidgetComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}